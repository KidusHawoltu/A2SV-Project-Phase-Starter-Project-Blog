services:
  # --- Your Go Application Service ---
  app:
    build:
      context: . # Use the Dockerfile in the current directory
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Map port 8080 on your local machine to port 8080 in the container
    environment:
      # --- General App Settings ---
      PORT: 8080
      DB_NAME: "starter_project" # The database name inside the Mongo container

      # --- Service URIs for Docker Networking ---
      MONGO_URI: "mongodb://mongo:27017/starter_project"
      REDIS_ADDR: "redis:6379"
      REDIS_PASSWORD: ""
      REDIS_DB: 0

      # --- JWT Settings ---
      JWT_SECRET: "a-secure-secret-for-docker-compose"
      JWT_ACCESS_TTL_MIN: "15"
      JWT_REFRESH_TTL_HR: "72"

      # --- External Service Credentials ---
      GEMINI_API_KEY: "AIzaSyBIA2wfDzUT5AnB8KO4g6VrLSwnxXxnMpU"
      GEMINI_MODEL: "gemini-2.5-pro"

      CLOUDINARY_CLOUD_NAME: "drmmkt58w"
      CLOUDINARY_API_KEY: "231385266396939"
      CLOUDINARY_API_SECRET: "bQpGJUJ8OrB7XsyKxWm-Z15Km1U"

      # --- Google OAuth Settings ---
      GOOGLE_CLIENT_ID: "936900951095-jvklo38ovakeigrk23jj8gsidngps370.apps.googleusercontent.com"
      GOOGLE_CLIENT_SECRET: "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"
      GOOGLE_REDIRECT_URI: "http://localhost:8080/api/v1/auth/google/callback"

      # --- Admin Credentials ---
      ADMIN_USERNAME: "ADMIN"
      ADMIN_PASSWORD: "PASSWORD"
    depends_on:
      - mongo  # Tells Docker to start the 'mongo' service before starting the 'app' service
      - redis  # Also wait for the 'redis' service
    networks:
      - app-network

  # --- MongoDB Service ---
  mongo:
    image: mongo:5.0 # Use a specific version of MongoDB
    ports:
      - "27017:27017" # Map the port so you can connect from your local machine if needed
    volumes:
      - mongo-data:/data/db # Persist MongoDB data on your local machine
    networks:
      - app-network

  # --- Redis Service ---
  redis:
    image: redis:6-alpine # Use the same version as your tests for consistency
    ports:
      - "6379:6379" # Map the port for local connections
    volumes:
      - redis-data:/data # Persist Redis data
    networks:
      - app-network

# Define the network for services to communicate
networks:
  app-network:
    driver: bridge

# Define the volumes for data persistence
volumes:
  mongo-data:
  redis-data: